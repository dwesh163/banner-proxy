pid {{ .PID }};
error_log stderr;
events {}
daemon off;

http {
    include /etc/nginx/mime.types;
    client_max_body_size 50M;

    server {
        listen 127.0.0.1:{{ .StatusPort }};
        location /healthz {
            return 200;
        }
        location /nginx_status {
            stub_status on;
        }
        location / {
            return 404;
        }
    }

    {{ range $server := .Servers }}
    server {
        server_name {{ $server.Hostname }} {{ range $server.Aliases }}{{ . }} {{ end }};
        
        location / {
            {{ range $location := $server.Locations }}
            {{ $upstream := $location.Upstream }}
            {{ if $upstream }}
            proxy_pass http://{{ $upstream.Name }};
            {{ end }}
            {{ end }}
            
            sub_filter '</head>' '<script>window.BANNER_MESSAGE="{{env "BANNER_MESSAGE"}}";window.BANNER_COLOR="{{env "BANNER_COLOR"}}";</script><script src="/banner.js"></script></head>';
            sub_filter_once on;
            sub_filter_types text/html;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /banner.js {
            root /etc/nginx/static;
            add_header Content-Type "application/javascript";
        }
    }
    {{ end }}
}
